## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
App1/*.rsuser
App1/*.suo
App1/*.user
App1/*.userosscache
App1/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
App1/*.userprefs

# Mono auto generated files
App1/mono_crash.*

# Build results
App1/[Dd]ebug/
App1/[Dd]ebugPublic/
App1/[Rr]elease/
App1/[Rr]eleases/
App1/x64/
App1/x86/
App1/[Ww][Ii][Nn]32/
App1/[Aa][Rr][Mm]/
App1/[Aa][Rr][Mm]64/
App1/bld/
App1/[Bb]in/
App1/[Oo]bj/
App1/[Ll]og/
App1/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
App1/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
# App1/wwwroot/

# Visual Studio 2017 auto generated files
App1/Generated\ Files/

# MSTest test Results
App1/[Tt]est[Rr]esult*/
App1/[Bb]uild[Ll]og.*

# NUnit
App1/*.VisualState.xml
App1/TestResult.xml
App1/nunit-*.xml

# Build Results of an ATL Project
App1/[Dd]ebugPS/
App1/[Rr]eleasePS/
App1/dlldata.c

# Benchmark Results
App1/BenchmarkDotNet.Artifacts/

# .NET Core
App1/project.lock.json
App1/project.fragment.lock.json
App1/artifacts/

# ASP.NET Scaffolding
App1/ScaffoldingReadMe.txt

# StyleCop
App1/StyleCopReport.xml

# Files built by Visual Studio
App1/*_i.c
App1/*_p.c
App1/*_h.h
App1/*.ilk
App1/*.meta
App1/*.obj
App1/*.iobj
App1/*.pch
App1/*.pdb
App1/*.ipdb
App1/*.pgc
App1/*.pgd
App1/*.rsp
App1/*.sbr
App1/*.tlb
App1/*.tli
App1/*.tlh
App1/*.tmp
App1/*.tmp_proj
App1/*_wpftmp.csproj
App1/*.log
App1/*.tlog
App1/*.vspscc
App1/*.vssscc
App1/.builds
App1/*.pidb
App1/*.svclog
App1/*.scc

# Chutzpah Test files
App1/_Chutzpah*

# Visual C++ cache files
App1/ipch/
App1/*.aps
App1/*.ncb
App1/*.opendb
App1/*.opensdf
App1/*.sdf
App1/*.cachefile
App1/*.VC.db
App1/*.VC.VC.opendb

# Visual Studio profiler
App1/*.psess
App1/*.vsp
App1/*.vspx
App1/*.sap

# Visual Studio Trace Files
App1/*.e2e

# TFS 2012 Local Workspace
App1/$tf/

# Guidance Automation Toolkit
App1/*.gpState

# ReSharper is a .NET coding add-in
App1/_ReSharper*/
App1/*.[Rr]e[Ss]harper
App1/*.DotSettings.user

# TeamCity is a build add-in
App1/_TeamCity*

# DotCover is a Code Coverage Tool
App1/*.dotCover

# AxoCover is a Code Coverage Tool
App1/.axoCover/*
!App1/.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
App1/coverage*.json
App1/coverage*.xml
App1/coverage*.info

# Visual Studio code coverage results
App1/*.coverage
App1/*.coveragexml

# NCrunch
App1/_NCrunch_*
App1/.*crunch*.local.xml
App1/nCrunchTemp_*

# MightyMoose
App1/*.mm.*
App1/AutoTest.Net/

# Web workbench (sass)
App1/.sass-cache/

# Installshield output folder
App1/[Ee]xpress/

# DocProject is a documentation generator add-in
App1/DocProject/buildhelp/
App1/DocProject/Help/*.HxT
App1/DocProject/Help/*.HxC
App1/DocProject/Help/*.hhc
App1/DocProject/Help/*.hhk
App1/DocProject/Help/*.hhp
App1/DocProject/Help/Html2
App1/DocProject/Help/html

# Click-Once directory
App1/publish/

# Publish Web Output
App1/*.[Pp]ublish.xml
App1/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
App1/*.pubxml
App1/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
App1/PublishScripts/

# NuGet Packages
App1/*.nupkg
# NuGet Symbol Packages
App1/*.snupkg
# The packages folder can be ignored because of Package Restore
App1/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
App1/!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
# App1/!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
App1/*.nuget.props
App1/*.nuget.targets

# Microsoft Azure Build Output
App1/csx/
App1/*.build.csdef

# Microsoft Azure Emulator
App1/ecf/
App1/rcf/

# Windows Store app package directories and files
App1/AppPackages/
App1/BundleArtifacts/
App1/Package.StoreAssociation.xml
App1/_pkginfo.txt
App1/*.appx
App1/*.appxbundle
App1/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
App1/*.[Cc]ache
# but keep track of directories ending in .cache
App1/!?*.[Cc]ache/

# Others
App1/ClientBin/
App1/~$*
App1/*~
App1/*.dbmdl
App1/*.dbproj.schemaview
App1/*.jfm
App1/*.pfx
App1/*.publishsettings
App1/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
# App1/*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# App1/bower_components/

# RIA/Silverlight projects
App1/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
App1/_UpgradeReport_Files/
App1/Backup*/
App1/UpgradeLog*.XML
App1/UpgradeLog*.htm
App1/ServiceFabricBackup/
App1/*.rptproj.bak

# SQL Server files
App1/*.mdf
App1/*.ldf
App1/*.ndf

# Business Intelligence projects
App1/*.rdl.data
App1/*.bim.layout
App1/*.bim_*.settings
App1/*.rptproj.rsuser
App1/*- [Bb]ackup.rdl
App1/*- [Bb]ackup ([0-9]).rdl
App1/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
App1/FakesAssemblies/

# GhostDoc plugin setting file
App1/*.GhostDoc.xml

# Node.js Tools for Visual Studio
App1/.ntvs_analysis.dat
App1/node_modules/

# Visual Studio 6 build log
App1/*.plg

# Visual Studio 6 workspace options file
App1/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
App1/*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
App1/*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
App1/*.dsw
App1/*.dsp

# Visual Studio 6 technical files
App1/*.ncb
App1/*.aps

# Visual Studio LightSwitch build output
App1/**/*.HTMLClient/GeneratedArtifacts
App1/**/*.DesktopClient/GeneratedArtifacts
App1/**/*.DesktopClient/ModelManifest.xml
App1/**/*.Server/GeneratedArtifacts
App1/**/*.Server/ModelManifest.xml
App1/_Pvt_Extensions

# Paket dependency manager
App1/.paket/paket.exe
App1/paket-files/

# FAKE - F# Make
App1/.fake/

# CodeRush personal settings
App1/.cr/personal

# Python Tools for Visual Studio (PTVS)
App1/__pycache__/
App1/*.pyc

# Cake - Uncomment if you are using it
# App1/tools/**
# App1/!tools/packages.config

# Tabs Studio
App1/*.tss

# Telerik's JustMock configuration file
App1/*.jmconfig

# BizTalk build output
App1/*.btp.cs
App1/*.btm.cs
App1/*.odx.cs
App1/*.xsd.cs

# OpenCover UI analysis results
App1/OpenCover/

# Azure Stream Analytics local run output
App1/ASALocalRun/

# MSBuild project binaries
App1/*.cproj/
App1/*.sln.Bindings


## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
App2/*.rsuser
App2/*.suo
App2/*.user
App2/*.userosscache
App2/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
App2/*.userprefs

# Mono auto generated files
App2/mono_crash.*

# Build results
App2/[Dd]ebug/
App2/[Dd]ebugPublic/
App2/[Rr]elease/
App2/[Rr]eleases/
App2/x64/
App2/x86/
App2/[Ww][Ii][Nn]32/
App2/[Aa][Rr][Mm]/
App2/[Aa][Rr][Mm]64/
App2/bld/
App2/[Bb]in/
App2/[Oo]bj/
App2/[Ll]og/
App2/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
App2/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
# App2/wwwroot/

# Visual Studio 2017 auto generated files
App2/Generated\ Files/

# MSTest test Results
App2/[Tt]est[Rr]esult*/
App2/[Bb]uild[Ll]og.*

# NUnit
App2/*.VisualState.xml
App2/TestResult.xml
App2/nunit-*.xml

# Build Results of an ATL Project
App2/[Dd]ebugPS/
App2/[Rr]eleasePS/
App2/dlldata.c

# Benchmark Results
App2/BenchmarkDotNet.Artifacts/

# .NET Core
App2/project.lock.json
App2/project.fragment.lock.json
App2/artifacts/

# ASP.NET Scaffolding
App2/ScaffoldingReadMe.txt

# StyleCop
App2/StyleCopReport.xml

# Files built by Visual Studio
App2/*_i.c
App2/*_p.c
App2/*_h.h
App2/*.ilk
App2/*.meta
App2/*.obj
App2/*.iobj
App2/*.pch
App2/*.pdb
App2/*.ipdb
App2/*.pgc
App2/*.pgd
App2/*.rsp
App2/*.sbr
App2/*.tlb
App2/*.tli
App2/*.tlh
App2/*.tmp
App2/*.tmp_proj
App2/*_wpftmp.csproj
App2/*.log
App2/*.tlog
App2/*.vspscc
App2/*.vssscc
App2/.builds
App2/*.pidb
App2/*.svclog
App2/*.scc

# Chutzpah Test files
App2/_Chutzpah*

# Visual C++ cache files
App2/ipch/
App2/*.aps
App2/*.ncb
App2/*.opendb
App2/*.opensdf
App2/*.sdf
App2/*.cachefile
App2/*.VC.db
App2/*.VC.VC.opendb

# Visual Studio profiler
App2/*.psess
App2/*.vsp
App2/*.vspx
App2/*.sap

# Visual Studio Trace Files
App2/*.e2e

# TFS 2012 Local Workspace
App2/$tf/

# Guidance Automation Toolkit
App2/*.gpState

# ReSharper is a .NET coding add-in
App2/_ReSharper*/
App2/*.[Rr]e[Ss]harper
App2/*.DotSettings.user

# TeamCity is a build add-in
App2/_TeamCity*

# DotCover is a Code Coverage Tool
App2/*.dotCover

# AxoCover is a Code Coverage Tool
App2/.axoCover/*
!App2/.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
App2/coverage*.json
App2/coverage*.xml
App2/coverage*.info

# Visual Studio code coverage results
App2/*.coverage
App2/*.coveragexml

# NCrunch
App2/_NCrunch_*
App2/.*crunch*.local.xml
App2/nCrunchTemp_*

# MightyMoose
App2/*.mm.*
App2/AutoTest.Net/

# Web workbench (sass)
App2/.sass-cache/

# Installshield output folder
App2/[Ee]xpress/

# DocProject is a documentation generator add-in
App2/DocProject/buildhelp/
App2/DocProject/Help/*.HxT
App2/DocProject/Help/*.HxC
App2/DocProject/Help/*.hhc
App2/DocProject/Help/*.hhk
App2/DocProject/Help/*.hhp
App2/DocProject/Help/Html2
App2/DocProject/Help/html

# Click-Once directory
App2/publish/

# Publish Web Output
App2/*.[Pp]ublish.xml
App2/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
App2/*.pubxml
App2/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
App2/PublishScripts/

# NuGet Packages
App2/*.nupkg
# NuGet Symbol Packages
App2/*.snupkg
# The packages folder can be ignored because of Package Restore
App2/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
App2/!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
# App2/!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
App2/*.nuget.props
App2/*.nuget.targets

# Microsoft Azure Build Output
App2/csx/
App2/*.build.csdef

# Microsoft Azure Emulator
App2/ecf/
App2/rcf/

# Windows Store app package directories and files
App2/AppPackages/
App2/BundleArtifacts/
App2/Package.StoreAssociation.xml
App2/_pkginfo.txt
App2/*.appx
App2/*.appxbundle
App2/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
App2/*.[Cc]ache
# but keep track of directories ending in .cache
App2/!?*.[Cc]ache/

# Others
App2/ClientBin/
App2/~$*
App2/*~
App2/*.dbmdl
App2/*.dbproj.schemaview
App2/*.jfm
App2/*.pfx
App2/*.publishsettings
App2/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
# App2/*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# App2/bower_components/

# RIA/Silverlight projects
App2/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
App2/_UpgradeReport_Files/
App2/Backup*/
App2/UpgradeLog*.XML
App2/UpgradeLog*.htm
App2/ServiceFabricBackup/
App2/*.rptproj.bak

# SQL Server files
App2/*.mdf
App2/*.ldf
App2/*.ndf

# Business Intelligence projects
App2/*.rdl.data
App2/*.bim.layout
App2/*.bim_*.settings
App2/*.rptproj.rsuser
App2/*- [Bb]ackup.rdl
App2/*- [Bb]ackup ([0-9]).rdl
App2/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
App2/FakesAssemblies/

# GhostDoc plugin setting file
App2/*.GhostDoc.xml

# Node.js Tools for Visual Studio
App2/.ntvs_analysis.dat
App2/node_modules/

# Visual Studio 6 build log
App2/*.plg

# Visual Studio 6 workspace options file
App2/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
App2/*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
App2/*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
App2/*.dsw
App2/*.dsp

# Visual Studio 6 technical files
App2/*.ncb
App2/*.aps

# Visual Studio LightSwitch build output
App2/**/*.HTMLClient/GeneratedArtifacts
App2/**/*.DesktopClient/GeneratedArtifacts
App2/**/*.DesktopClient/ModelManifest.xml
App2/**/*.Server/GeneratedArtifacts
App2/**/*.Server/ModelManifest.xml
App2/_Pvt_Extensions

# Paket dependency manager
App2/.paket/paket.exe
App2/paket-files/

# FAKE - F# Make
App2/.fake/

# CodeRush personal settings
App2/.cr/personal

# Python Tools for Visual Studio (PTVS)
App2/__pycache__/
App2/*.pyc

# Cake - Uncomment if you are using it
# App2/tools/**
# App2/!tools/packages.config

# Tabs Studio
App2/*.tss

# Telerik's JustMock configuration file
App2/*.jmconfig

# BizTalk build output
App2/*.btp.cs
App2/*.btm.cs
App2/*.odx.cs
App2/*.xsd.cs

# OpenCover UI analysis results
App2/OpenCover/

# Azure Stream Analytics local run output
App2/ASALocalRun/

# MSBuild project binaries
App2/*.cproj/
App2/*.sln.Bindings


## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
STRIDEAPI/*.rsuser
STRIDEAPI/*.suo
STRIDEAPI/*.user
STRIDEAPI/*.userosscache
STRIDEAPI/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
STRIDEAPI/*.userprefs

# Mono auto generated files
STRIDEAPI/mono_crash.*

# Build results
STRIDEAPI/[Dd]ebug/
STRIDEAPI/[Dd]ebugPublic/
STRIDEAPI/[Rr]elease/
STRIDEAPI/[Rr]eleases/
STRIDEAPI/x64/
STRIDEAPI/x86/
STRIDEAPI/[Ww][Ii][Nn]32/
STRIDEAPI/[Aa][Rr][Mm]/
STRIDEAPI/[Aa][Rr][Mm]64/
STRIDEAPI/bld/
STRIDEAPI/[Bb]in/
STRIDEAPI/[Oo]bj/
STRIDEAPI/[Ll]og/
STRIDEAPI/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
STRIDEAPI/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
# STRIDEAPI/wwwroot/

# Visual Studio 2017 auto generated files
STRIDEAPI/Generated\ Files/

# MSTest test Results
STRIDEAPI/[Tt]est[Rr]esult*/
STRIDEAPI/[Bb]uild[Ll]og.*

# NUnit
STRIDEAPI/*.VisualState.xml
STRIDEAPI/TestResult.xml
STRIDEAPI/nunit-*.xml

# Build Results of an ATL Project
STRIDEAPI/[Dd]ebugPS/
STRIDEAPI/[Rr]eleasePS/
STRIDEAPI/dlldata.c

# Benchmark Results
STRIDEAPI/BenchmarkDotNet.Artifacts/

# .NET Core
STRIDEAPI/project.lock.json
STRIDEAPI/project.fragment.lock.json
STRIDEAPI/artifacts/

# ASP.NET Scaffolding
STRIDEAPI/ScaffoldingReadMe.txt

# StyleCop
STRIDEAPI/StyleCopReport.xml

# Files built by Visual Studio
STRIDEAPI/*_i.c
STRIDEAPI/*_p.c
STRIDEAPI/*_h.h
STRIDEAPI/*.ilk
STRIDEAPI/*.meta
STRIDEAPI/*.obj
STRIDEAPI/*.iobj
STRIDEAPI/*.pch
STRIDEAPI/*.pdb
STRIDEAPI/*.ipdb
STRIDEAPI/*.pgc
STRIDEAPI/*.pgd
STRIDEAPI/*.rsp
STRIDEAPI/*.sbr
STRIDEAPI/*.tlb
STRIDEAPI/*.tli
STRIDEAPI/*.tlh
STRIDEAPI/*.tmp
STRIDEAPI/*.tmp_proj
STRIDEAPI/*_wpftmp.csproj
STRIDEAPI/*.log
STRIDEAPI/*.tlog
STRIDEAPI/*.vspscc
STRIDEAPI/*.vssscc
STRIDEAPI/.builds
STRIDEAPI/*.pidb
STRIDEAPI/*.svclog
STRIDEAPI/*.scc

# Chutzpah Test files
STRIDEAPI/_Chutzpah*

# Visual C++ cache files
STRIDEAPI/ipch/
STRIDEAPI/*.aps
STRIDEAPI/*.ncb
STRIDEAPI/*.opendb
STRIDEAPI/*.opensdf
STRIDEAPI/*.sdf
STRIDEAPI/*.cachefile
STRIDEAPI/*.VC.db
STRIDEAPI/*.VC.VC.opendb

# Visual Studio profiler
STRIDEAPI/*.psess
STRIDEAPI/*.vsp
STRIDEAPI/*.vspx
STRIDEAPI/*.sap

# Visual Studio Trace Files
STRIDEAPI/*.e2e

# TFS 2012 Local Workspace
STRIDEAPI/$tf/

# Guidance Automation Toolkit
STRIDEAPI/*.gpState

# ReSharper is a .NET coding add-in
STRIDEAPI/_ReSharper*/
STRIDEAPI/*.[Rr]e[Ss]harper
STRIDEAPI/*.DotSettings.user

# TeamCity is a build add-in
STRIDEAPI/_TeamCity*

# DotCover is a Code Coverage Tool
STRIDEAPI/*.dotCover

# AxoCover is a Code Coverage Tool
STRIDEAPI/.axoCover/*
!STRIDEAPI/.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
STRIDEAPI/coverage*.json
STRIDEAPI/coverage*.xml
STRIDEAPI/coverage*.info

# Visual Studio code coverage results
STRIDEAPI/*.coverage
STRIDEAPI/*.coveragexml

# NCrunch
STRIDEAPI/_NCrunch_*
STRIDEAPI/.*crunch*.local.xml
STRIDEAPI/nCrunchTemp_*

# MightyMoose
STRIDEAPI/*.mm.*
STRIDEAPI/AutoTest.Net/

# Web workbench (sass)
STRIDEAPI/.sass-cache/

# Installshield output folder
STRIDEAPI/[Ee]xpress/

# DocProject is a documentation generator add-in
STRIDEAPI/DocProject/buildhelp/
STRIDEAPI/DocProject/Help/*.HxT
STRIDEAPI/DocProject/Help/*.HxC
STRIDEAPI/DocProject/Help/*.hhc
STRIDEAPI/DocProject/Help/*.hhk
STRIDEAPI/DocProject/Help/*.hhp
STRIDEAPI/DocProject/Help/Html2
STRIDEAPI/DocProject/Help/html

# Click-Once directory
STRIDEAPI/publish/

# Publish Web Output
STRIDEAPI/*.[Pp]ublish.xml
STRIDEAPI/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
STRIDEAPI/*.pubxml
STRIDEAPI/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
STRIDEAPI/PublishScripts/

# NuGet Packages
STRIDEAPI/*.nupkg
# NuGet Symbol Packages
STRIDEAPI/*.snupkg
# The packages folder can be ignored because of Package Restore
STRIDEAPI/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
STRIDEAPI/!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
# STRIDEAPI/!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
STRIDEAPI/*.nuget.props
STRIDEAPI/*.nuget.targets

# Microsoft Azure Build Output
STRIDEAPI/csx/
STRIDEAPI/*.build.csdef

# Microsoft Azure Emulator
STRIDEAPI/ecf/
STRIDEAPI/rcf/

# Windows Store app package directories and files
STRIDEAPI/AppPackages/
STRIDEAPI/BundleArtifacts/
STRIDEAPI/Package.StoreAssociation.xml
STRIDEAPI/_pkginfo.txt
STRIDEAPI/*.appx
STRIDEAPI/*.appxbundle
STRIDEAPI/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
STRIDEAPI/*.[Cc]ache
# but keep track of directories ending in .cache
STRIDEAPI/!?*.[Cc]ache/

# Others
STRIDEAPI/ClientBin/
STRIDEAPI/~$*
STRIDEAPI/*~
STRIDEAPI/*.dbmdl
STRIDEAPI/*.dbproj.schemaview
STRIDEAPI/*.jfm
STRIDEAPI/*.pfx
STRIDEAPI/*.publishsettings
STRIDEAPI/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
# STRIDEAPI/*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# STRIDEAPI/bower_components/

# RIA/Silverlight projects
STRIDEAPI/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
STRIDEAPI/_UpgradeReport_Files/
STRIDEAPI/Backup*/
STRIDEAPI/UpgradeLog*.XML
STRIDEAPI/UpgradeLog*.htm
STRIDEAPI/ServiceFabricBackup/
STRIDEAPI/*.rptproj.bak

# SQL Server files
STRIDEAPI/*.mdf
STRIDEAPI/*.ldf
STRIDEAPI/*.ndf

# Business Intelligence projects
STRIDEAPI/*.rdl.data
STRIDEAPI/*.bim.layout
STRIDEAPI/*.bim_*.settings
STRIDEAPI/*.rptproj.rsuser
STRIDEAPI/*- [Bb]ackup.rdl
STRIDEAPI/*- [Bb]ackup ([0-9]).rdl
STRIDEAPI/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
STRIDEAPI/FakesAssemblies/

# GhostDoc plugin setting file
STRIDEAPI/*.GhostDoc.xml

# Node.js Tools for Visual Studio
STRIDEAPI/.ntvs_analysis.dat
STRIDEAPI/node_modules/

# Visual Studio 6 build log
STRIDEAPI/*.plg

# Visual Studio 6 workspace options file
STRIDEAPI/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
STRIDEAPI/*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
STRIDEAPI/*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
STRIDEAPI/*.dsw
STRIDEAPI/*.dsp

# Visual Studio 6 technical files
STRIDEAPI/*.ncb
STRIDEAPI/*.aps

# Visual Studio LightSwitch build output
STRIDEAPI/**/*.HTMLClient/GeneratedArtifacts
STRIDEAPI/**/*.DesktopClient/GeneratedArtifacts
STRIDEAPI/**/*.DesktopClient/ModelManifest.xml
STRIDEAPI/**/*.Server/GeneratedArtifacts
STRIDEAPI/**/*.Server/ModelManifest.xml
STRIDEAPI/_Pvt_Extensions

# Paket dependency manager
STRIDEAPI/.paket/paket.exe
STRIDEAPI/paket-files/

# FAKE - F# Make
STRIDEAPI/.fake/

# CodeRush personal settings
STRIDEAPI/.cr/personal

# Python Tools for Visual Studio (PTVS)
STRIDEAPI/__pycache__/
STRIDEAPI/*.pyc

# Cake - Uncomment if you are using it
# STRIDEAPI/tools/**
# STRIDEAPI/!tools/packages.config

# Tabs Studio
STRIDEAPI/*.tss

# Telerik's JustMock configuration file
STRIDEAPI/*.jmconfig

# BizTalk build output
STRIDEAPI/*.btp.cs
STRIDEAPI/*.btm.cs
STRIDEAPI/*.odx.cs
STRIDEAPI/*.xsd.cs

# OpenCover UI analysis results
STRIDEAPI/OpenCover/

# Azure Stream Analytics local run output
STRIDEAPI/ASALocalRun/

# MSBuild project binaries
STRIDEAPI/*.cproj/
STRIDEAPI/*.sln.Bindings
